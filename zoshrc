export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="burke"

plugins=( git docker zsh-autosuggestions zsh-autocomplete )

source $ZSH/oh-my-zsh.sh

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

export DOTNET_ROOT=/usr/share/dotnet
export PATH=$PATH:$DOTNET_ROOT
export PATH="$PATH:/home/bstrang/.dotnet/tools"

# export ASPNETCORE_ENVIRONMENT=Development

export PATH=$PATH:/usr/local/go/bin

export PATH=/usr/bin:$PATH
export PATH=/usr/local/bin:$PATH


mvd(){
    downloads_path="/mnt/c/Users/bstrang/Downloads"
    current_directory="$(pwd)"

    # Find the most recently modified file
    last_write_file=$(find "$downloads_path" -type f -printf "%T@ %p\n" | sort -n | tail -1 | cut -d' ' -f2-)

    if [[ -n "$last_write_file" ]]; then
        mv "$last_write_file" "$current_directory"
        echo "Moved file: $(basename "$last_write_file") to $current_directory"
    else
        echo "No files found in the Downloads folder."
    fi
}

v(){
  if [ $# -eq 0 ]; then
    nvim
  else
    for file in "$@"; do
      if [[ -w "$file" ]]; then
        nvim "$file"
      else
        sudo -E nvim "$file"
      fi
    done
  fi
}

t() {
  if command -v tmux &> /dev/null; then
    if [[ -z "$TMUX" ]]; then
      tmux attach-session -t based || tmux new-session -s based
    fi
  fi
}

alias ls="eza"
alias c="clear"
alias e="exit"
alias nco="~/.config/nvim"
alias nsh="~/.local/share/nvim"
alias nst="~/.local/state/nvim"
alias nca="~/.cache/nvim"
alias re="$HOME/repos"
alias python=python3
#zoxide
alias s="z"

# Define a function that updates the DOTNET_TESTS array for your project.
dtc() {
  DOTNET_TESTS=("${(f)$(dotnet test --list-tests --no-build \
    | sed -n '/The following Tests are available:/,$p' \
    | sed '1d' \
    | sed 's/(.*)//' \
    | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' \
    | sort | uniq)}")
  
  # Optional: display a message showing how many tests were found.
  echo "Updated DOTNET_TESTS: found ${#DOTNET_TESTS[@]} tests."
}


fpath=(~/.oh-my-zsh/completions $fpath)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# zstyle ':completion:*:*:dotnet:*' script ~/.oh-my-zsh/completions/_dotnet_test_filter
autoload -U compinit; compinit
eval "$(zoxide init zsh)"
# Enable fuzzy matching for completions.
# zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
